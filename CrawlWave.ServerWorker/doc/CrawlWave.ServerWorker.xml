<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrawlWave.ServerWorker</name>
    </assembly>
    <members>
        <member name="T:CrawlWave.ServerWorker.Forms.frmMain">
            <summary>
            frmMain is the main form of the CrawlWave ServerWorker.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Forms.frmMain.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:CrawlWave.ServerWorker.Forms.frmMain"/> form.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Forms.frmMain.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Forms.frmMain.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Forms.frmMain.Main(System.String[])">
            <summary>
            The application's entry point
            </summary>
            <param name="args">The arguments passed to the application.</param>
        </member>
        <member name="T:CrawlWave.ServerWorker.Settings">
            <summary>
            Settings provides a collection of all the settings required for the ServerWorker's
            operation. It offers method to load and store the application's settings.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Settings.#ctor">
            <summary>
            The constructor is private so that only the class itself can create an instance.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Settings.Instance">
            <summary>
            Provides a global access point for the single instance of the <see cref="T:CrawlWave.ServerWorker.Settings"/>
            class.
            </summary>
            <returns>A reference to the single instance of <see cref="T:CrawlWave.ServerWorker.Settings"/>.</returns>
        </member>
        <member name="M:CrawlWave.ServerWorker.Settings.GetPath">
            <summary>
            Determines the application's path.
            </summary>
            <returns>The application's path, including the trailing slashes</returns>
        </member>
        <member name="M:CrawlWave.ServerWorker.Settings.LoadSettings">
            <summary>
            Loads the settings of the plugin from the configuration file.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.Settings.SaveSettings">
            <summary>
            Saves the plugin's settings in a new xml file on disk
            </summary>
        </member>
        <member name="P:CrawlWave.ServerWorker.Settings.LoadPluginsAtStartup">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value indicating whether the ServerWorker
            should attempt to load the Plugins at startup. 
            </summary>
        </member>
        <member name="P:CrawlWave.ServerWorker.Settings.MinimizeToTray">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value indicating whether the ServerWorker
            should display an icon in the System Tray and hide the main form when Minimized.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerWorker.Settings.MinimizeOnExit">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value indicating whether the ServerWorker
            should minimize instead of exiting when the user presses the Close box.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerWorker.Settings.PluginList">
            <summary>
            Gets or sets an <see cref="T:System.Collections.ArrayList"/> containing the paths of the Plugins the
            ServerWorker must load at Startup.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerWorker.Settings.Log">
            <summary>
            Gets a reference to an <see cref="T:CrawlWave.Common.ILogger"/> that is used to log events.
            </summary>
        </member>
        <member name="T:CrawlWave.ServerWorker.SWSettings">
            <summary>
            SWSettings provides a collection of all the settings required for the ServerWorker's
            operation. They allow the settings defined by the user or system to be stored in
            persistent form (in an XML file on disk) using serialization.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerWorker.SWSettings.LoadPluginsAtStartup">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether the ServerWorker should attempt
            to load the Plugins at startup. 
            </summary>
        </member>
        <member name="F:CrawlWave.ServerWorker.SWSettings.MinimizeToTray">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether the plugin should display an
            icon in the System Tray and hide the main interface when Minimized.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerWorker.SWSettings.MinimizeOnExit">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether the plugin should minimize
            instead of exiting when the user presses the Close button on the Command Toolbox.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerWorker.SWSettings.PluginList">
            <summary>
            An <see cref="T:System.Collections.ArrayList"/> containing the paths of the Plugins the ServerWorker
            must load at Startup.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.SWSettings.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:CrawlWave.ServerWorker.SWSettings"/> class.
            </summary>
        </member>
        <member name="T:CrawlWave.ServerWorker.PluginController">
            <summary>
            PluginController is a class that implements <see cref="T:CrawlWave.Common.IPluginHost"/>. It acts as a
            host for all the plugins that are loaded by the Server Worker. The PluginController
            allows all the plugins to log their events without restrictions. It also features
            an event that allows the UI to be updated when the state of a plugin changes.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:CrawlWave.ServerWorker.PluginController"/> class.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.StopAllPlugins">
            <summary>
            Stops all the loaded Plugins.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.Register(CrawlWave.Common.PluginBase)">
            <summary>
            Registers a <see cref="T:CrawlWave.Common.PluginBase"/> with this instance of <see cref="T:CrawlWave.ServerWorker.PluginController"/>.
            </summary>
            <param name="plugin">The Plugin to register.</param>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.StartAllPlugins">
            <summary>
            Starts all the loaded Plugins.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.PermitReport(CrawlWave.Common.PluginBase)">
            <summary>
            Manages reporting permissions for plugins.
            </summary>
            <param name="plugin">The plugin that wishes to report an event.</param>
            <returns>True if the Plugin is permitted to report, otherwise false.</returns>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.PauseAllPlugins">
            <summary>
            Pauses all the running plugins.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.LoadPlugin(System.String)">
            <summary>
            Loads a plugin from disk and registers it with this instance of <see cref="T:CrawlWave.ServerWorker.PluginController"/>.
            </summary>
            <param name="fileName">The path of the file containing the Plugin to load.</param>
            <exception cref="T:CrawlWave.Common.CWUnsupportedPluginException">
            Thrown if the specified file does not contain a type that derives from 
            <see cref="T:CrawlWave.Common.PluginBase"/> and implements <see cref="T:CrawlWave.Common.IPlugin"/>.
            </exception>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.IsPluginRegistered(CrawlWave.Common.PluginBase)">
            <summary>
            Checks whether a <see cref="T:CrawlWave.Common.PluginBase">Plugin</see> is already registered with
            the controller.
            </summary>
            <param name="plugin">The plugin to check</param>
            <returns>True if the Plugin is already registered with the controller, false otherwise.</returns>
        </member>
        <member name="M:CrawlWave.ServerWorker.PluginController.AttachLogger(CrawlWave.Common.ILogger)">
            <summary>
            Attaches a new logger to which the host must log all the events.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="P:CrawlWave.ServerWorker.PluginController.RunningPlugins">
            <summary>
            Gets the number of Running Plugins.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerWorker.PluginController.Plugins">
            <summary>
            Gets a reference to the list of <see cref="T:CrawlWave.Common.IPlugin"/> objects currently loaded
            and managed by this instance of <see cref="T:CrawlWave.ServerWorker.PluginController"/>.
            </summary>
        </member>
        <member name="E:CrawlWave.ServerWorker.PluginController.PluginStateChanged">
            <summary>
            Occurs whenever the <see cref="P:CrawlWave.Common.PluginBase.State"/> of a loaded Plugin changes.
            </summary>
        </member>
    </members>
</doc>
