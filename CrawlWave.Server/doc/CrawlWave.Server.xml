<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrawlWave.Server</name>
    </assembly>
    <members>
        <member name="T:CrawlWave.Server.Authentication">
             <summary>
             Authentication is a <see cref="T:Microsoft.Web.Services2.Security.Tokens.UsernameTokenManager"/> class that performs the
             authentication required for CrawlWave Clients. It performs lookup based on the
             username provided by the Client and it verifies it against the database.
             </summary>
             <remarks>
             This class includes the <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode"/> demand
             to ensure that any untrusted assemblies cannot invoke this code. This helps mitigate
             brute-force password discovery attacks. 
            </remarks>
        </member>
        <member name="M:CrawlWave.Server.Authentication.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:CrawlWave.Server.ServerEngine"/> class and opens a
            connection to the database.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.Authentication.AuthenticateToken(Microsoft.Web.Services2.Security.Tokens.UsernameToken)">
            <summary>
            Authenticates a <see cref="T:Microsoft.Web.Services2.Security.Tokens.UsernameToken"/>.
            </summary>
            <param name="token">The <see cref="T:Microsoft.Web.Services2.Security.Tokens.UsernameToken"/> to authenticate.</param>
            <returns>
            A string containing the password corresponding to the username of the provided
            token. If no username match occurs a null string is returned.
            </returns>
        </member>
        <member name="M:CrawlWave.Server.Authentication.ConnectToDatabase">
            <summary>
            Creates the connection to the database if necessary and opens it.
            </summary>
            <returns>True if the operation is successful, false otherwise.</returns>
        </member>
        <member name="M:CrawlWave.Server.Authentication.DisconnectFromDatabase">
            <summary>
            Disconeects the CrawlWave Server from the system's database.
            </summary>
            <returns>True if the operation is successful, false otherwise.</returns>
        </member>
        <member name="T:CrawlWave.Server.SecurityUtils">
            <summary>
            Contains static methods that allow common security functions, like Message Signature
            verification and Security Token extraction.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.SecurityUtils.VerifyMessageParts(Microsoft.Web.Services2.SoapContext)">
            <summary>
            This method basically checks if those required message parts exist. The required
            headers are Soap:body, To, Action, MessageID, and Timestamp
            </summary>
            <param name="context">The <see cref="T:Microsoft.Web.Services2.SoapContext"/> to check.</param>
            <exception cref="T:System.ApplicationException">Thrown if the verification fails.</exception>
        </member>
        <member name="M:CrawlWave.Server.SecurityUtils.GetSigningToken(Microsoft.Web.Services2.SoapContext)">
            <summary>
            This method checks if the incoming message has signed all the important message
            parts such as soap:Body, all the addressing headers and timestamp.  
            </summary>
            <param name="context"></param>
            <returns>The signing token</returns>
        </member>
        <member name="M:CrawlWave.Server.SecurityUtils.CheckSignature(Microsoft.Web.Services2.SoapContext,Microsoft.Web.Services2.Security.MessageSignature)">
            <summary>
            This method verifies an incoming message's signature by verifying the signature
            on those parts that were actually signed.
            </summary>
            <param name="context">The request's <see cref="T:Microsoft.Web.Services2.SoapContext"/>.</param>
            <param name="signature">The <see cref="T:Microsoft.Web.Services2.Security.MessageSignature"/> to check.</param>
            <returns>True if the signature is verified, false otherwise.</returns>
        </member>
        <member name="M:CrawlWave.Server.SecurityUtils.GetEncryptingToken(Microsoft.Web.Services2.SoapContext)">
            <summary>
            This method checks if the incoming message contains encrypted soap message body 
            </summary>
            <param name="context">The <see cref="T:Microsoft.Web.Services2.SoapContext"/> to search for.</param>
            <returns>The encrypting token</returns>
        </member>
        <member name="M:CrawlWave.Server.SecurityUtils.GetUsernameToken(Microsoft.Web.Services2.SoapContext)">
            <summary>
            This method checks if the incoming message contains a <see cref="T:Microsoft.Web.Services2.Security.Tokens.UsernameToken"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Web.Services2.SoapContext"/> to check.</param>
            <returns>The username token.</returns>
        </member>
        <member name="T:CrawlWave.Server.ServerEngine">
            <summary>
            ServerEngine acts as a front-end to the system's database. It contains all the 
            methods that have some kind of interaction with the database so that they can be
            used by the <see cref="T:CrawlWave.Server.CrawlWaveServer"/> Web Service.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:CrawlWave.Server.ServerEngine"/> class and opens a
            connection to the database.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.StoreNewClientComputerInfo(CrawlWave.Common.ClientInfo,CrawlWave.Common.CWComputerInfo)">
            <summary>
            Updates the computer hardware info related to a client.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client.</param>
            <param name="info">The <see cref="T:CrawlWave.Common.CWComputerInfo"/> of the client computer.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.StoreCrawlResults(CrawlWave.Common.ClientInfo,CrawlWave.Common.UrlCrawlData[])">
            <summary>
            Stores the results that the clients return after crawling a set of Urls.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client returning the data.</param>
            <param name="data">An array of <see cref="T:CrawlWave.Common.UrlCrawlData"/> objects containing the data of the crawled urls.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.StoreCrawlResults(CrawlWave.Common.ClientInfo,System.Byte[])">
            <summary>
            Stores the results that the clients return after crawling a set of Urls.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client returning the data.</param>
            <param name="data">An array of bytes containing an array of <see cref="T:CrawlWave.Common.UrlCrawlData"/>
            objects containing the data of the crawled urls in serialized form.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.StoreClientRegistrationInfo(CrawlWave.Common.ClientInfo@,CrawlWave.Common.CWComputerInfo)">
            <summary>
            Performs the registration of a new client for a registered user of the system.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client that wishes to be
            registered to the system.</param>
            <param name="info">The <see cref="T:CrawlWave.Common.CWComputerInfo"/> of the computer running the
            client.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.StoreUserRegistrationInfo(System.Int32@,System.String,System.Byte[],System.String)">
            <summary>
            Performs the registration of a new user by storing his info in the database.
            </summary>
            <param name="ID">The ID that will be assigned to the new user, passed by reference.</param>
            <param name="username">The username requested from the new user.</param>
            <param name="password">The hash of the new user's password.</param>
            <param name="email">The user's email address.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SelectBannedHosts(CrawlWave.Common.ClientInfo,System.Data.DataSet@)">
            <summary>
            Selects and returns a list of all the banned hosts.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting the data.</param>
            <param name="data">A <see cref="T:System.Data.DataSet"/> that will contain the list of banned hosts.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SelectLatestVersion(CrawlWave.Common.ClientInfo,System.String@)">
            <summary>
            Selects and returns the latest version of the client updates available.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client performing the call.</param>
            <param name="version">The latest version update available.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SelectServers(CrawlWave.Common.ClientInfo,System.Data.DataSet@)">
            <summary>
            Selects and returns a list of all the CrawlWave Servers.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting the data.</param>
            <param name="data">A <see cref="T:System.Data.DataSet"/> that will contain the list of servers.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SelectUpdatedVersion(CrawlWave.Common.ClientInfo,System.String,System.Byte[])">
            <summary>
            Selects and returns a byte array containing a Client Update version.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting the data.</param>
            <param name="version">The requested version.</param>
            <param name="data">A byte array that will contain the binary update file.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SelectUrlsToCrawl(CrawlWave.Common.ClientInfo,CrawlWave.Common.InternetUrlToCrawl[]@)">
            <summary>
            Selects and returns a set of urls that are ready to be crawled.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting urls to crawl.</param>
            <param name="data">An array of <see cref="T:CrawlWave.Common.InternetUrlToCrawl"/> objects containing the selected urls.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SelectUserStatistics(CrawlWave.Common.ClientInfo,CrawlWave.Common.UserStatistics@)">
            <summary>
            Selects and returns the statistics for a certain user.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting the statistics.</param>
            <param name="stats">The <see cref="T:CrawlWave.Common.UserStatistics"/> of the user.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.LogClientAction(CrawlWave.Common.ClientInfo,CrawlWave.Common.CWClientActions)">
            <summary>
            Logs a client's activity in the Client History table of the system's database.
            It silently ignores errors.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client performing the action.</param>
            <param name="action">The <see cref="T:CrawlWave.Common.CWClientActions"/> action performed by the client.</param>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.UpdateClientLastActive(CrawlWave.Common.ClientInfo)">
            <summary>
            Updates a client's last activity date in the system's database.
            </summary>
            <param name="ci">The info of the client performing an action.</param>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.ConnectToDatabase">
            <summary>
            Creates the connection to the database if necessary and opens it.
            </summary>
            <returns>True if the operation is successful, false otherwise.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.DisconnectFromDatabase">
            <summary>
            Disconeects the CrawlWave Server from the system's database.
            </summary>
            <returns>True if the operation is successful, false otherwise.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.SaveXMLFile(CrawlWave.Common.ClientInfo,CrawlWave.Common.UrlCrawlData[])">
            <summary>
            Stores an array of <see cref="T:CrawlWave.Common.UrlCrawlData"/> objects and the <see cref="T:CrawlWave.Common.ClientInfo"/>
            of the client who returned them on a compressed file on disk.
            </summary>
            <param name="info">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client who returned the data.</param>
            <param name="data">An array of <see cref="T:CrawlWave.Common.UrlCrawlData"/> objects containing the
            data returned by the client.</param>
        </member>
        <member name="M:CrawlWave.Server.ServerEngine.ConcatenatePaths(System.String[])">
            <summary>
            Concatenates an array of strings each containing a disallowed path into a string
            separated by spaces.
            </summary>
            <param name="paths">An array of strings each containing a disallowed path.</param>
            <returns>A string containing all the paths concatenated and separated by spaces.</returns>
        </member>
        <member name="T:CrawlWave.Server.ServerSettings">
            <summary>
            ServerSettings is a Singleton class that holds the settings related to the server's
            operation. It provides easy access to all the classes that need it.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.ServerSettings.#ctor">
            <summary>
            The constructor is private so that only the class itself can create an instance.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.ServerSettings.Instance">
            <summary>
            Provides a global access point for the single instance of the <see cref="T:CrawlWave.Server.ServerSettings"/>
            class.
            </summary>
            <returns>A reference to the single instance of <see cref="T:CrawlWave.Server.ServerSettings"/>.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerSettings.ProvideConnectionString">
            <summary>
            Provides a Database Connection String to any class that needs it, setting the
            application name of the connection to a combination of the application's name
            and a random number.
            </summary>
            <returns>A database connection string.</returns>
        </member>
        <member name="M:CrawlWave.Server.ServerSettings.LoadSettings">
            <summary>
            Loads the server's settings from the Web.config configuration file
            </summary>
        </member>
        <member name="P:CrawlWave.Server.ServerSettings.Log">
            <summary>
            Gets a reference to the <see cref="T:CrawlWave.Common.SystemEventLogger"/> that will be used by all
            the classes for error logging.
            </summary>
        </member>
        <member name="P:CrawlWave.Server.ServerSettings.LogLevel">
            <summary>
            Gets a <see cref="T:CrawlWave.Common.CWLogLevel"/> value indicating the logging level of the server.
            </summary>
        </member>
        <member name="P:CrawlWave.Server.ServerSettings.LogOptions">
            <summary>
            Gets a <see cref="T:CrawlWave.Common.CWClientActions"/> value indicating the level of logging that
            will be performed on the system's database.
            </summary>
        </member>
        <member name="P:CrawlWave.Server.ServerSettings.DataFilesPath">
            <summary>
            Gets a string indicating the path where the server will store the crawled pages.
            </summary>
        </member>
        <member name="P:CrawlWave.Server.ServerSettings.Robots">
            <summary>
            Gets a reference to a <see cref="T:CrawlWave.ServerCommon.RobotsCache"/> holding a cache of the robots.txt
            files that are stored in the database.
            </summary>
        </member>
        <member name="T:CrawlWave.Server.CrawlWaveServer">
            <summary>
            Summary description for CrawlWaveServer.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.Authenticate(Microsoft.Web.Services2.SoapContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.IsAlive">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.GetClientComputerInfo(CrawlWave.Common.ClientInfo,CrawlWave.Common.CWComputerInfo)">
            <summary>
            Updates the computer hardware info related to a client.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client.</param>
            <param name="info">The <see cref="T:CrawlWave.Common.CWComputerInfo"/> of the client computer.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
            <remarks>
            This method actually calls <see cref="M:CrawlWave.Server.ServerEngine.StoreNewClientComputerInfo(CrawlWave.Common.ClientInfo,CrawlWave.Common.CWComputerInfo)"/>.
            All requests to this method are authenticated by <see cref="T:CrawlWave.Server.Authentication"/>.
            </remarks>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.GetCrawlResults(CrawlWave.Common.ClientInfo,CrawlWave.Common.UrlCrawlData[])">
            <summary>
            Stores the results that the clients return after crawling a set of Urls.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client returning the data.</param>
            <param name="data">An array of <see cref="T:CrawlWave.Common.UrlCrawlData"/> objects containing the data of the crawled urls.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
            <remarks>
            <para>This method actually calls <see cref="M:CrawlWave.Server.ServerEngine.StoreCrawlResults(CrawlWave.Common.ClientInfo,CrawlWave.Common.UrlCrawlData[])"/>.
            All requests to this method are authenticated by the <see cref="T:CrawlWave.Server.Authentication"/>
            class.</para>
            <para>
            This method does not actually update the database with the data of the crawled
            urls, since that is a very time-consuming process and the timeouts that occur
            would slow down the clients. Also this might lead to 'losing' urls because the
            database server will have to deal with great load if a big number of clients is
            returning data all the time. To avoid these problems the server simply updates
            the database with the fresh robots.txt files fetched by the clients and stores
            the data in a compressed zip file on disk. This allows their processing and the
            update of the database with the data of the urls and the links they contain to
            be performed at a later time by another process (the DBUpdater plugin).
            </para>
            </remarks>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.GetCrawlResultsRaw(CrawlWave.Common.ClientInfo,System.Byte[])">
            <summary>
            Stores the results that the clients return after crawling a set of Urls.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client returning the data.</param>
            <param name="data">An array of bytes containing the data of the crawled urls as 
            an array of <see cref="T:CrawlWave.Common.UrlCrawlData"/> objects in serialized form.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
            <remarks>
            <para>This method actually calls <see cref="M:CrawlWave.Server.ServerEngine.StoreCrawlResults(CrawlWave.Common.ClientInfo,CrawlWave.Common.UrlCrawlData[])"/>.
            All requests to this method are authenticated by the <see cref="T:CrawlWave.Server.Authentication"/>
            class.</para>
            <para>
            This method does not actually update the database with the data of the crawled
            urls, since that is a very time-consuming process and the timeouts that occur
            would slow down the clients. Also this might lead to 'losing' urls because the
            database server will have to deal with great load if a big number of clients is
            returning data all the time. To avoid these problems the server simply updates
            the database with the fresh robots.txt files fetched by the clients and stores
            the data in a compressed zip file on disk. This allows their processing and the
            update of the database with the data of the urls and the links they contain to
            be performed at a later time by another process (the DBUpdater plugin).
            </para>
            <para>
            <b>Attention: </b> This method is slightly less efficient than its other overload
            and must only be used in special circumstances, e.g. when a SOAP Formatting error
            occurs during an attempt to return results.
            </para>
            </remarks>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.RegisterClient(CrawlWave.Common.ClientInfo@,CrawlWave.Common.CWComputerInfo)">
            <summary>
            Performs the registration of a new client for a registered user of the system.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> containing the information of the
            client that wishes to be registered to the system.</param>
            <param name="info">The <see cref="T:CrawlWave.Common.CWComputerInfo"/> containing information about
            the hardware of the computer running the client.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
            <remarks>
            The ClientInfo argument is passed by reference. After the registration process
            is complete the argument will be updated with the ID that has been assigned to
            the new client.
            </remarks>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.RegisterUser(System.Int32@,System.String,System.Byte[],System.String)">
            <summary>
            Performs the registration of a new user to the system.
            </summary>
            <param name="ID">The ID that will be assigned to the new user, passed by reference.</param>
            <param name="username">The username requested from the new user.</param>
            <param name="password">The hash of the new user's password.</param>
            <param name="email">The user's email address.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
            <remarks>
            <para>This method actually calls <see cref="M:CrawlWave.Server.ServerEngine.StoreUserRegistrationInfo(System.Int32@,System.String,System.Byte[],System.String)"/>.</para>
            <para>This method will not be called using WSE 2.0 (no authentication of the 
            requests will be performed) because when a client calls it his username will not
            have been assigned yet. It must be called by a non-WSE enabled proxy.</para>
            </remarks>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.SendBannedHosts(CrawlWave.Common.ClientInfo,System.Data.DataSet@)">
            <summary>
            Selects and returns a list of all the banned hosts.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client performing the call.</param>
            <param name="data">A <see cref="T:System.Data.DataSet"/> that will contain the list of banned hosts.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.SendLatestVersion(CrawlWave.Common.ClientInfo,System.String@)">
            <summary>
            Selects and returns the latest version of the client updates available.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client performing the call.</param>
            <param name="version">The latest version update available.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.SendServers(CrawlWave.Common.ClientInfo,System.Data.DataSet@)">
            <summary>
            Selects and returns a list of all the servers available.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client performing the call.</param>
            <param name="data">A <see cref="T:System.Data.DataSet"/> that will contain the list of servers.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.SendUpdatedVersion(CrawlWave.Common.ClientInfo,System.String,System.Byte[]@)">
            <summary>
            Selects and returns the requested client update version.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client performing the call.</param>
            <param name="version">The requested version.</param>
            <param name="data">A <see cref="T:System.Data.DataSet"/> that will contain the list of servers.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.SendUrlsToCrawl(CrawlWave.Common.ClientInfo,CrawlWave.Common.InternetUrlToCrawl[]@)">
            <summary>
            Selects and returns a set of urls that are ready to be crawled.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting urls to crawl.</param>
            <param name="data">An array of <see cref="T:CrawlWave.Common.InternetUrlToCrawl"/> objects containing the selected urls.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="M:CrawlWave.Server.CrawlWaveServer.SendUserStatistics(CrawlWave.Common.ClientInfo,CrawlWave.Common.UserStatistics@)">
            <summary>
            Selects and returns the statistics for a certain user.
            </summary>
            <param name="ci">The <see cref="T:CrawlWave.Common.ClientInfo"/> of the client requesting the statistics.</param>
            <param name="stats">The <see cref="T:CrawlWave.Common.UserStatistics"/> of the user.</param>
            <returns>Null if the operation succeeds, or <see cref="T:CrawlWave.Common.SerializedException"/> 
            encapsulating the error that occured if the operation fails.</returns>
        </member>
        <member name="T:CrawlWave.Server.Global">
            <summary>
            Summary description for Global.
            </summary>
        </member>
        <member name="F:CrawlWave.Server.Global.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CrawlWave.Server.Global.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CrawlWave.Server.Global.Application_Start(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Session_Start(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Application_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Application_EndRequest(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Application_AuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Application_Error(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Session_End(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.Application_End(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CrawlWave.Server.Global.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
