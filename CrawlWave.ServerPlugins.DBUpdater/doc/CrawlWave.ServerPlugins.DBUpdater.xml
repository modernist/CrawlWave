<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrawlWave.ServerPlugins.DBUpdater</name>
    </assembly>
    <members>
        <member name="T:CrawlWave.ServerPlugins.DBUpdater.PluginSettings">
            <summary>
            PluginSettings is a Singleton class that holds all the plugin's settings and provides
            a global point of access to them.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.#ctor">
            <summary>
            The constructor is private so that only the class itself can create an instance.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.Instance">
            <summary>
            Provides a global access point for the single instance of the <see cref="T:CrawlWave.ServerPlugins.DBUpdater.PluginSettings"/>
            class.
            </summary>
            <returns>A reference to the single instance of <see cref="T:CrawlWave.ServerPlugins.DBUpdater.PluginSettings"/>.</returns>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.GetPluginPath">
            <summary>
            Determines the plugin's path.
            </summary>
            <returns>The plugin's path, including the trailing slashes</returns>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.LoadSettings">
            <summary>
            Loads the settings of the plugin from the configuration file.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.SaveSettings">
            <summary>
            Saves the plugin's settings in a new xml file on disk
            </summary>
        </member>
        <member name="P:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.DataPath">
            <summary>
            Gets or sets a string containing the path of the folder where the plugin will
            attempt to read the data files from.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.PauseBetweenOperations">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value indicating whether the plugin should
            pause its operation between consecutive loops or subtasks. This option allows
            the adjustment of the load that the plugin puts on the system.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.PauseDelay">
            <summary>
            Gets or sets an integer value indicating the amount of time that the plugin must
            pause for between each loop or subtask.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.UseTransactions">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value indicating whether the plugin should
            use transactions for its interactions with the database. Enabling this makes the
            plugin slower and causes the transaction log size to grow but it is safer.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.DBActionTimeout">
            <summary>
            Gets or sets an integer value indicating the amount of time that can be consumed
            during each Database Action, before a Timeout error is thrown.
            </summary>
        </member>
        <member name="P:CrawlWave.ServerPlugins.DBUpdater.PluginSettings.DBConnectionString">
            <summary>
            Gets or sets the connection string that the plugin uses to create a connection
            to the system's database if it is data dependent.
            </summary>
        </member>
        <member name="T:CrawlWave.ServerPlugins.DBUpdater.DUPluginSettings">
            <summary>
            DUPluginSettings provides a collection of all the settings required for the plugin's
            operation. They allow the settings defined by the user or system to be stored in
            persistent form (in an XML file on disk) using serialization.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerPlugins.DBUpdater.DUPluginSettings.DataPath">
            <summary>
            A string containing the path of the folder where the plugin will attempt to read
            the data files from.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerPlugins.DBUpdater.DUPluginSettings.PauseBetweenOperations">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether the plugin should pause its 
            operation between consecutive loops or subtasks.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerPlugins.DBUpdater.DUPluginSettings.PauseDelay">
            <summary>
            An integer value indicating the amount of time that the plugin must pause for
            between each loop or subtask.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerPlugins.DBUpdater.DUPluginSettings.UseTransactions">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether the plugin should use transactions
            for its interactions with the database. Enabling this makes the plugin slower
            and causes the transaction log size to grow but it is safer.
            </summary>
        </member>
        <member name="F:CrawlWave.ServerPlugins.DBUpdater.DUPluginSettings.DBActionTimeout">
            <summary>
            An integer value indicating the amount of time that can be consumed during each
            Database Action, before a Timeout error is thrown.
            </summary>
        </member>
        <member name="T:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin">
            <summary>
            DBUpdaterPlugin is an <see cref="T:CrawlWave.Common.IPlugin"/> that performs the task of updating the
            system's database with the data returned by the clients after crawling urls. It can
            run while the crawling process is active or it can be enabled at a later time, thus
            updating the database in an asynchronous batch mode.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin"/> class.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.Start">
            <summary>
            Starts the process of the database update. If the plugin is  already in the 
            <see cref="F:CrawlWave.Common.PluginState.Running"/> state then it has no effect.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the plugin is in the <see cref="F:CrawlWave.Common.PluginState.Paused"/> state.
            </exception>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.Pause">
            <summary>
            Pauses the database update process by calling <see cref="M:System.Threading.Thread.Suspend"/> on the 
            running threads. If the plugin is already in the <see cref="F:CrawlWave.Common.PluginState.Paused"/>
            state it has no effect.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the plugin is in the <see cref="F:CrawlWave.Common.PluginState.Stopped"/> state.
            </exception>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.Resume">
            <summary>
            Resumes the database update process if it has been paused.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the plugin is in the <see cref="F:CrawlWave.Common.PluginState.Stopped"/> or 
            <see cref="F:CrawlWave.Common.PluginState.Running"/> state.
            </exception>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.Stop">
            <summary>
            Stops the database update process. If the plugin is already in the <see cref="F:CrawlWave.Common.PluginState.Stopped"/>
            state it has no effect. If the update process is in progress it is not stopped
            abruptly but the method waits until the selection of urls is complete.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.ShowSettings">
            <summary>
            Displays a form with the plugin's settings.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.PerformUpdate">
            <summary>
            Performs the database update. It is running on pluginThread, so it must be able
            to handle ThreadAbortException and ThreadInterruptedException.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.LoadDataFile(System.String)">
            <summary>
            Loads a data file from the disk, decompresses it and extracts the <see cref="T:CrawlWave.Common.UrlCrawlDataFile"/>
            it contains.
            </summary>
            <param name="fileName">The name of the file to load.</param>
            <returns>The <see cref="T:CrawlWave.Common.UrlCrawlDataFile"/> contained in the file or null if
            something goes wrong.</returns>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.SelectDataFileName">
            <summary>
            Selects a file name of one of the available data files in order to process it.
            </summary>
            <returns>A string containing one of the available data files name.</returns>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.UpdateUrl(CrawlWave.Common.UrlCrawlData,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Updates the Url and the Url Data tables
            </summary>
            <param name="data">The UrlCrawlData containing the data of the crawled Url.</param>
            <param name="transaction">The currently active <see cref="T:System.Data.SqlClient.SqlTransaction"/>.</param>
            <returns>The ID of the updated url or 0 of something goes wrong.</returns>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.ClearUrlOutLinks(System.Int32,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Deletes all the edges of the Url Link Graph whose starting node is the given Url
            </summary>
            <param name="UrlID">The ID of the url whose all the out-links must be deleted.</param>
            <param name="transaction">The currently active <see cref="T:System.Data.SqlClient.SqlTransaction"/>.</param>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.InsertUrlOutLinks(System.Int32,CrawlWave.Common.UrlCrawlData,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Inserts the links contained in a url into the database and updates the link graph
            </summary>
            <param name="UrlID">The ID of the url.</param>
            <param name="data">The <see cref="T:CrawlWave.Common.UrlCrawlData"/> of the url.</param>
            <param name="transaction">The currently active <see cref="T:System.Data.SqlClient.SqlTransaction"/>.</param>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.PauseInSeconds">
            <summary>
            Returns the number of seconds the thread must wait before continuing to the next loop
            </summary>
            <returns>The delay amount in seconds</returns>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.StopThreads">
            <summary>
            Stops the plugin's threads
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.SuspendThreads">
            <summary>
            Suspends the plugin's threads
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.ResumeThreads">
            <summary>
            Resumes the plugin's suspended threads
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.OnStateChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.StateChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> related to the event.</param>
        </member>
        <member name="E:CrawlWave.ServerPlugins.DBUpdater.DBUpdaterPlugin.StateChanged">
            <summary>
            Occurs when the plugin's <see cref="T:CrawlWave.Common.PluginState"/> changes.
            </summary>
        </member>
        <member name="T:CrawlWave.ServerPlugins.DBUpdater.frmPluginSettings">
            <summary>
            frmPluginSettings is the form that displays the Plugin's settings and allows the 
            user to change and save them.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.frmPluginSettings.#ctor">
            <summary>
            Constructs a new instance of the Plugin's settings form.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.frmPluginSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:CrawlWave.ServerPlugins.DBUpdater.frmPluginSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
