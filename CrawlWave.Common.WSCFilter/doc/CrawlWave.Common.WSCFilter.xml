<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrawlWave.Common.WSCFilter</name>
    </assembly>
    <members>
        <member name="T:CrawlWave.Common.WSCFilter.CompressionType">
            <summary>
            Defines an enumeration of different compression algorithms that can be used.
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.CompressionType.GZip">
            <summary>
            Enables Gzip compression (faster)
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.CompressionType.BZip2">
            <summary>
            Enables Bzip2 compression (slower)
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.CompressionType.Zip">
            <summary>
            Enables Zip compression
            </summary>
        </member>
        <member name="T:CrawlWave.Common.WSCFilter.WSCFCompression">
            <summary>
            Implements static methods that allow easy compression and decompression of strings,
            byte arrays and streams using <see cref="!:SharpZipLib"/> classes.
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.WSCFCompression.CompressionProvider">
            <summary>
            Defines the <see cref="T:CrawlWave.Common.WSCFilter.CompressionType"/> that will be used by the filters
            </summary>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.OutputStream(System.IO.Stream)">
            <summary>
            Creates a new compression output stream that reads from an input stream based
            on the value of the <see cref="F:CrawlWave.Common.WSCFilter.WSCFCompression.CompressionProvider"/> property.
            </summary>
            <param name="inputStream">The <see cref="T:System.IO.Stream"/> that will be used for input.</param>
            <returns>An appropriate <see cref="!:SharpZipLib"/> output stream.</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.InputStream(System.IO.Stream)">
            <summary>
            Ctreates a new decompression input stream that reads from an input stream based
            on the value of the <see cref="F:CrawlWave.Common.WSCFilter.WSCFCompression.CompressionProvider"/> property.
            </summary>
            <param name="inputStream">The <see cref="T:System.IO.Stream"/> that will be used for input.</param>
            <returns>An appropriate <see cref="!:SharpZipLib"/> input stream.</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.Compress(System.Byte[])">
            <summary>
            Compresses a byte array.
            </summary>
            <param name="buffer">The input buffer</param>
            <returns>An array of bytes containing the compressed data</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.CompressToStream(System.Byte[])">
            <summary>
            Compresses a byte array into a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="buffer">The input buffer.</param>
            <returns>A <see cref="T:System.IO.MemoryStream"/> containing the compressed input.</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.Compress(System.String)">
            <summary>
            Compresses a string
            </summary>
            <param name="inputString">The input string</param>
            <returns>The compressed string in Base64 format.</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.CompressToByte(System.String)">
            <summary>
            Compresses a string into an array of bytes
            </summary>
            <param name="inputString">The input string.</param>
            <returns>An array of bytes containing the compressed input.</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.DeCompress(System.String)">
            <summary>
            Decompresses a string of compressed data in Base64 format into a new string
            </summary>
            <param name="inputString">The input string in Base64 format</param>
            <returns>The decompressed string.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the input srting is null.</exception>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.DeCompress(System.Byte[])">
            <summary>
            Decompresses an array of bytes
            </summary>
            <param name="buffer">The input buffer</param>
            <returns>A byte array containing the decompressed input</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.DeCompressToStream(System.Byte[])">
            <summary>
            Decompresses a byte array into a new <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="buffer">The input buffer.</param>
            <returns>A <see cref="T:System.IO.MemoryStream"/> containing the decompressed data.</returns>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFCompression.DeCompressToStream(System.IO.Stream)">
            <summary>
            Decompresses a <see cref="T:System.IO.Stream"/> into a new <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="inputStream">The input <see cref="T:System.IO.Stream"/>.</param>
            <returns>A new <see cref="T:System.IO.MemoryStream"/> containing the decompressed data.</returns>
        </member>
        <member name="T:CrawlWave.Common.WSCFilter.Constants">
            <summary>
            Defines constants used in <see cref="T:CrawlWave.Common.WSCFilter.WSCFZipFilter"/> and <see cref="T:CrawlWave.Common.WSCFilter.WSCFUnzipFilter"/>.
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.Constants.WSCFCompressionElement">
            <summary>
            The name of the SOAP header element that the filter uses as identifier
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.Constants.WSCFAttribute">
            <summary>
            The name of the first attribute
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.Constants.WSCFTypeAttribute">
            <summary>
            The name of the second attribute
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.Constants.WSCF1KB">
            <summary>
            The constant size of 1KB (2^10)
            </summary>
        </member>
        <member name="T:CrawlWave.Common.WSCFilter.WSCFZipFilter">
            <summary>
            WSCFZipFilter is a filter that when added to the pipeline compresses the body element
            and adds the result as an attachment to soap message. The body element is deleted,
            so only the compressed element is transported over the network. On the receiving
            side the <see cref="T:CrawlWave.Common.WSCFilter.WSCFUnzipFilter"/> should be added to the pipeline
            </summary>
            <remarks>
            <b>Prerequisites:</b>
            <para>
            WSE 2.0 release installed.
            ICSharpZipLib available and referenced.
            </para>
            </remarks>
            <example>
            Adding a Filter to the pipeline:<br/>
            Client side (i.e. WinForms app):<br/>
            <para>
            <code>Server.Pipeline.InputFilters.Add(new WSCFUnzipFilter());</code>
            </para>
            <br/>
            Server side (i.e WebService / ASP.Net): add the following section to the web.config
            file, in the &lt; microsoft.web.services2&gt; section.<br/>
            <code>
              &lt;filters&gt;<br/>
            	&lt;output&gt;<br/>
            	  &lt;add type="CrawlWave.Common.WSCFilter.WSCFZipFilter,CrawlWave.Common.WSCFilter" /&gt;<br/>
            	&lt;/output&gt;<br/>
              &lt;/filters&gt;
            </code>
            </example>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.WSCFZipFilter.minFilterSize">
            <summary>
            The minimum size of the SOAP body element for compression to be enabled
            </summary>
        </member>
        <member name="F:CrawlWave.Common.WSCFilter.WSCFZipFilter.enabled">
            <summary>
            A flag indicating if the filter is enabled
            </summary>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFZipFilter.ProcessMessage(Microsoft.Web.Services2.SoapEnvelope)">
            <summary>
            Processes the SOAP Messages and compresses them if necessary
            </summary>
            <param name="envelope">The <see cref="T:Microsoft.Web.Services2.SoapEnvelope"/> to process.</param>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFZipFilter.CreateCustomHeader(System.Xml.XmlElement,System.String)">
            <summary>
            Creates a custom Xml header to be attached in a <see cref="T:Microsoft.Web.Services2.SoapEnvelope"/>.
            </summary>
            <param name="header">The original <see cref="T:System.Xml.XmlElement"/> SOAP header.</param>
            <param name="AttributeValue">The value of the header attribute.</param>
            <returns>A new <see cref="T:System.Xml.XmlElement"/> object containing a SOAP header.</returns>
        </member>
        <member name="P:CrawlWave.Common.WSCFilter.WSCFZipFilter.MinFilterSizeKB">
            <summary>
            Gets or sets the minimum message size in KB for compression to be enabled.
            </summary>
        </member>
        <member name="P:CrawlWave.Common.WSCFilter.WSCFZipFilter.Enabled">
            <summary>
            Gets or sets a flag indicating whether the filter is enabled.
            </summary>
        </member>
        <member name="T:CrawlWave.Common.WSCFilter.WSCFUnzipFilter">
            <summary>
            WSCFUnzipFilter is a filter that when added to the pipeline decompresses the body
            element attachment and sets the result as the soap message body. The filter will
            only do so if it finds evidence that the <see cref="T:CrawlWave.Common.WSCFilter.WSCFZipFilter"/> has been used.
            </summary>
            <remarks>
            <b>Prerequisites:</b>
            <para>
            WSE 2.0 release installed.<br/>
            ICSharpZipLib available and referenced.
            </para>
            </remarks>
            <example>
            Adding a Filter to the pipeline:<br/>
            Client side (i.e. WinForms app):<br/>
            <para>
            <code>Server.Pipeline.InputFilters.Add(new WSCFUnzipFilter());</code>
            </para>
            <br/>
            Server side (i.e Web Service / ASP.Net): add the following section to the web.config
            file, in the &lt;microsoft.web.services2&gt; section.
            <code>
              &lt;filters&gt;<br/>
            	&lt;input&gt;<br/>
            	  &lt;add type="CrawlWave.Common.WSCFilter.WSCFUnzipFilter,CrawlWave.Common.WSCFilter" /&gt;<br/>
            	&lt;/input&gt;<br/>
              &lt;/filters&gt;
            </code>
            </example>
        </member>
        <member name="M:CrawlWave.Common.WSCFilter.WSCFUnzipFilter.ProcessMessage(Microsoft.Web.Services2.SoapEnvelope)">
            <summary>
            Processes the SOAP Messages and decompresses them if necessary
            </summary>
            <param name="envelope">The <see cref="T:Microsoft.Web.Services2.SoapEnvelope"/> to process.</param>
        </member>
    </members>
</doc>
